클래스의 이름은 무엇인가(what he is)를 바탕으로 짓기로 했다.
메서드의 이름을 짓는 방법에 대해 알아보자.

메서드는 크게 하는 일이 2가지이다.
무언가를 반환하는 빌더.
어떤 행동을 수행하는 조정자.

저자는 빌더는 명사로
조정자는 동사로 메서드 이름을 지어야 한다고 한다.

1. 빌더를 명사로 써야하는 이유
이렇게 하지 않으면 객체지향적 사고에서 벗어나게 된다고 한다.

예를 보면,
class Bakery {
    Food cookBrownie();
}
위와 같이 동사를 빌더로 사용하게 된다면, '브라우니를 어떠어떠하게 요리를 해서 주세요.' 처럼 자세하게 요구하게 되며,
이는 객체에게 자율성을 주지 않고 수동적으로 만들게 된다. 따라서 객체지향적 사고에서 멀어지게 된다.

class Bakery {
    Food brownie();
}
다음과 같이 명사로 이름을 짓게 되면, Bakery에게 '브라우니를 주세요.'와 같이 요구하게 되며,
어떻게 브라우니를 줄 것인지에 대해서는 전적으로 Bakery에게 맡기게 된다.

2. 조정자를 동사로 써야하는 이유
이도 마찬가지이다. 객체지향적으로 생각한다면, 조정자의 경우 '무엇을 해주세요.'라고 요청을 할 때, 무엇을 해주길 바라지. 무엇을 하고 반환 해주길 기대하지 않는다.
ex) Pixel.paint(red); // 픽셀을 빨간색으로 칠하길 기대하지, 빨간색으로 칠하고 무언가를 반환받길 기대하지 않는다.

3. 조정하면서 결과 값을 반환해야 하는 경우도 있지 않아?
하지만 실제 사례에서는 조정하면서 결과를 원하는 경우도 있다. 이런 경우엔 어떻게 하는 것이 좋을까?
class Document {
    int write(InputStream content);
}

저자는 중간 클래스를 하나 두어 해당 객체에게 요청하기를 요구한다.
class Document {
    OutputPipe output();
}
class OutputPipe {
    void write(InputStream content);
    int bytes();
    //long time();
}
OutputPipe output = document.output();
output.write(content);
int bytes = output.bytes();

이렇게 해주면 단순히 bytes를 반환 받는 것이 아닌 추가적인 작업들을 더해주기에도 용이해진다.(트랜잭션 시간처리와 같은)

4. Boolean을 반환하는 경우
값을 반환하므로 빌더여서 명사로 지어야하지만, Boolean의 경우엔 가독성 측면에서 예외적으로 형용사가 좋다.
is는 중복이므로 메서드 이름에는 포함시키지 않고, 읽을 때만 사용한다.
boolean isEmpty(); x
boolean empty(); o // 읽을 때는 is empty로 읽는다.

자바를 포함한 대부분의 언어에서 논리 구성자를 다루는 방식이 특별하기 때문이다.
if (name.emptiness() == true) {
    // 뭔가를 한다
}
위와 같이 쓰지 않고 아래와 같이 쓴다
if (name.empty()) {
    // 뭔가를 한다
}

위의 경우엔 읽을 때 'name의 비어있음이 참이면'으로 읽게 되지만
아래의 경우엔 '이름이 비어있으면'으로 읽게 되므로 가독성이 더 좋다.

핵심)
객체지향적으로 사고하기 위해서
빌더는 명사, 조정자는 동사, boolean은 형용사로 메서드 이름을 짓는다.
절대로 2가지 일을 동시에 하면 안된다. 하게 된다면, 중간 클래스를 하나 두자.

참고)
1. 명사에 형용사, 동사에 부사를 붙여서 꾸며주는 것은 좋다.
Color fancyColor();
void quicklyPrint();

2. 빌더패턴을 사용하게 된다면, 이는 인자 수가 많기 때문에 사용하게 되는데
이 자체가 잘못된 경우일 확률이 높다. 객체는 더 작은 객체로 나뉘어야 한다!
