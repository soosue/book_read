new HTTP("http://www.google.com").read();
new HTTP().read("http://www.google.com");
어떤 것이 더 좋아보이는가?

어떠한 객체들은 상태가 없는 객체들도 존재한다.(어떤 것도 캡슐화하지 않은 객체)
물론 이런 일은 일어나선 안된다.(말이 안됨)

이런 객체들은 내부에 식별할 수 있는 캡슐화된 객체들이 없기 때문에, 모두가 같다고 볼 수 있다.
동작하는 방식도 정적 메서드와 유사하고,(객체지향 프로그래밍에서 악명 높다)
아무런 상태, 식별자도 없이 행동만 가지고 있게 된다.
이게 뭐가 잘못되었는지에 대해서 저자는 순수한 OOP에서는
 1. 정적 메서드가 존재하지 않고, 2. 생성과 실행이 엄격히 분리되고, 3. 기술적으로 프로퍼티가 없는 클래스를 만들 수 없다고 한다.

상태가 없는 객체에 대해서는, 세계 안에서 객체를 식별할 수 있는 무언가가 없는, 좌표가 없는 객체라고 말하며,
이런 객체는 세계자체라고 얘기를 한다. 그리고 이 클래스의 존재 타당성에 대해서는 없는 것 같다고 한다.

아무튼 객체지향 세계에서는 어떤 일을 수행하는 객체는 다른 객체들과 공존하면서 이들을 사용하고,
해당 객체는 자기 자신을 식별할 수 있도록 다른 객체들을 캡슐화해야 한다.

핵심)
캡슐화를 너무 많이 해도 안 좋지만, 아무 것도 캡슐화를 하지 않는 것도 안된다.
객체는 다른 객체와 공존하면서 사용하고 사용되며, 자기 자신을 식별할 수 있어야하기 때문이다.(식별에 꼭 필요)

참고)
https://www.yegor256.com/2014/12/15/how-much-your-objects-encapsulate.html
